<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Crazylychee.demo03mysql.mock.mapper.EmergencyMapper">
    <insert id="insert" parameterType="com.Crazylychee.demo03mysql.mock.Emergency">
        INSERT INTO emergency_event
        (event_id,region_id, event_type, emergency_level, event_description, create_time)
        VALUES
            (#{eventId}, #{regionId}, #{eventType}, #{emergencyLevel}, #{eventDescription}, #{createTime})
    </insert>

    <select id="selectCounts" resultType="java.lang.Integer"
            parameterType="java.lang.Integer">
        SELECT count(*)
        FROM emergency_event
    </select>

    <insert id="batchInsert">
        INSERT INTO emergency_event
        (event_id, region_id, event_type, emergency_level, event_description, create_time)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.eventId}, #{item.regionId}, #{item.eventType},
            #{item.emergencyLevel}, #{item.eventDescription}, #{item.createTime})
        </foreach>
    </insert>

    <select id="selectEventsByCreateTimeRange" resultType="java.lang.Integer"><![CDATA[
        SELECT e.event_id
        FROM emergency_event e
        WHERE create_time >= #{startDate}
          AND create_time <= #{endDate}
        ORDER BY event_id ASC
        ]]></select>


    <select id="selectListById" resultType="com.Crazylychee.demo03mysql.mock.Emergency">
        SELECT event_id as eventId, region_id as regionId, event_type as eventType,
                emergency_level as emergencyLevel, event_description as eventDescription,
                create_time as createTime
        FROM emergency_event e
        WHERE event_id &lt;= #{eventId}
        ORDER BY event_id DESC
        LIMIT #{pageSize}
    </select>


</mapper>
